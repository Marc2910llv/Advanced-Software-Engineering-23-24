Analysis results:

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 01-carts-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 01-carts-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 01-carts-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: containers[] .resources .limits .cpu
	reason: Enforcing CPU limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: containers[] .resources .limits .memory
	reason: Enforcing memory limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: containers[] .resources .requests .cpu
	reason: Enforcing CPU requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: containers[] .resources .requests .memory
	reason: Enforcing memory requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 13-orders-db-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: containers[] .resources .limits .cpu
	reason: Enforcing CPU limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: containers[] .resources .limits .memory
	reason: Enforcing memory limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: containers[] .resources .requests .cpu
	reason: Enforcing CPU requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: containers[] .resources .requests .memory
	reason: Enforcing memory requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 21-session-db-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: containers[] .resources .limits .cpu
	reason: Enforcing CPU limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: containers[] .resources .limits .memory
	reason: Enforcing memory limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: containers[] .resources .requests .cpu
	reason: Enforcing CPU requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: containers[] .resources .requests .memory
	reason: Enforcing memory requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 19-rabbitmq-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 05-catalogue-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 05-catalogue-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 05-catalogue-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 09-front-end-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 09-front-end-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 09-front-end-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: containers[] .resources .limits .cpu
	reason: Enforcing CPU limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: containers[] .resources .limits .memory
	reason: Enforcing memory limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: containers[] .resources .requests .cpu
	reason: Enforcing CPU requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: containers[] .resources .requests .memory
	reason: Enforcing memory requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 03-carts-db-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 11-orders-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 11-orders-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 11-orders-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: containers[] .securityContext .capabilities .drop
	reason: Reducing kernel capabilities available to a container limits its attack surface

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: containers[] .securityContext .capabilities .drop | index("ALL")
	reason: Drop all capabilities and add only those required to reduce syscall attack surface

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: containers[] .securityContext .readOnlyRootFilesystem == true
	reason: An immutable root filesystem can prevent malicious binaries being added to PATH and increase attack cost

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 17-queue-master-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .resources .limits .cpu
	reason: Enforcing CPU limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .resources .limits .memory
	reason: Enforcing memory limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .resources .requests .cpu
	reason: Enforcing CPU requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .resources .requests .memory
	reason: Enforcing memory requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .securityContext .capabilities .drop
	reason: Reducing kernel capabilities available to a container limits its attack surface

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .securityContext .capabilities .drop | index("ALL")
	reason: Drop all capabilities and add only those required to reduce syscall attack surface

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .securityContext .readOnlyRootFilesystem == true
	reason: An immutable root filesystem can prevent malicious binaries being added to PATH and increase attack cost

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 07-catalogue-db-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 15-payment-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 15-payment-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 15-payment-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 23-shipping-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 23-shipping-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 23-shipping-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 25-user-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 25-user-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 25-user-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: .metadata .annotations ."container.apparmor.security.beta.kubernetes.io/nginx"
	reason: Well defined AppArmor policies may provide greater protection from unknown threats. WARNING: NOT PRODUCTION READY

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: .spec .serviceAccountName
	reason: Service accounts restrict Kubernetes API access and should be configured with least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: .metadata .annotations ."container.seccomp.security.alpha.kubernetes.io/pod"
	reason: Seccomp profiles set minimum privilege and secure against unknown threats

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: containers[] .resources .limits .cpu
	reason: Enforcing CPU limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: containers[] .resources .limits .memory
	reason: Enforcing memory limits prevents DOS via resource exhaustion

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: containers[] .resources .requests .cpu
	reason: Enforcing CPU requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: containers[] .resources .requests .memory
	reason: Enforcing memory requests aids a fair balancing of resources across the cluster

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: containers[] .securityContext .runAsNonRoot == true
	reason: Force the running image to run as a non-root user to ensure least privilege

KubeSec analysis - detected smells {UPM}
	Kubesec.io found potential problems in 27-user-db-dep.yaml
	selector: containers[] .securityContext .runAsUser -gt 10000
	reason: Run as a high-UID user to avoid conflicts with the host's user table

Insufficient Access Control in OpenAPI Analysis - detected smells {IAC, CA}
	SecurityScheme not specified in carts.json

Insufficient Access Control in OpenAPI Analysis - detected smells {IAC, CA}
	SecurityScheme not specified in catalogue.json

Insufficient Access Control in OpenAPI Analysis - detected smells {IAC, CA}
	SecurityScheme not specified in orders.json

Insufficient Access Control in OpenAPI Analysis - detected smells {IAC, CA}
	SecurityScheme not specified in payment.json

Insufficient Access Control in OpenAPI Analysis - detected smells {IAC, CA}
	SecurityScheme not specified in user.json

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod istio-egressgateway-557dfbc477-bqxhf, container istio-proxy
	variable: ISTIO_META_ISTIO_PROXY_SHA=94bd************************************
	reason: Hex High Entropy String

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod istio-ingressgateway-ff458948f-xhkf2, container istio-proxy
	variable: ISTIO_META_ISTIO_PROXY_SHA=94bd************************************
	reason: Hex High Entropy String

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod csi-linode-controller-0, container linode-csi-plugin
	variable: LINODE_TOKEN=f882************************************************************
	reason: Hex High Entropy String

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod csi-linode-node-ghb42, container csi-linode-plugin
	variable: LINODE_TOKEN=f882************************************************************
	reason: Hex High Entropy String

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod csi-linode-node-kjtmc, container csi-linode-plugin
	variable: LINODE_TOKEN=f882************************************************************
	reason: Hex High Entropy String

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod csi-linode-node-v4tts, container csi-linode-plugin
	variable: LINODE_TOKEN=f882************************************************************
	reason: Hex High Entropy String

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod catalogue-db-6d49c7c65-l46bk, container catalogue-db
	variable: MYSQL_ROOT_PASSWORD=fake*********
	reason: Secret Keyword

Secrets in environment variables analysis - detected smells {HS}
	Detected secret in pod session-db-5b7f5f6c47-7npg7, container session-db
	variable: REDIS_DOWNLOAD_SHA=6705************************************************************
	reason: Hex High Entropy String

Traffic analysis - detected smells {NSC}
	Unencrypted traffic detected in pod carts-76dd6bf8f9-vd2g2
	here is a sample of the packets (HTTP):
	HTTP 10.2.2.204 -> 10.2.1.187 : GET /carts/57a98d98e4b00679b4a830b2/merge?sessionId=Ys4Dh0tNeTyvFLdVJkgb6tM0GhwvLQ6C HTTP/1.1
	HTTP 10.2.1.187 -> 10.2.2.204 : 0
	HTTP 10.2.2.204 -> 10.2.1.187 : GET /carts/57a98d98e4b00679b4a830b2/merge?sessionId=EEQhJlFDGTtojeojumYHBE3B85Vx_Ie- HTTP/1.1
	HTTP 10.2.2.204 -> 10.2.1.187 : DELETE /carts/57a98d98e4b00679b4a830b2 HTTP/1.1
	HTTP 10.2.1.187 -> 10.2.2.204 : 0
	HTTP 10.2.1.187 -> 10.2.2.204 : 0
	HTTP 10.2.2.204 -> 10.2.1.187 : POST /carts/57a98d98e4b00679b4a830b2/items HTTP/1.1
	HTTP 10.2.2.204 -> 10.2.1.187 : DELETE /carts/57a98d98e4b00679b4a830b2 HTTP/1.1
	HTTP 10.2.1.187 -> 10.2.2.204 : 0
	HTTP 10.2.1.187 -> 10.2.2.204 : 0
	HTTP 10.2.2.204 -> 10.2.1.187 : POST /carts/57a98d98e4b00679b4a830b2/items HTTP/1.1

Traffic analysis - detected smells {NSC}
	Unencrypted traffic detected in pod catalogue-5f495f9cf8-wvk5f
	here is a sample of the packets (HTTP):
	HTTP 10.2.2.204 -> 10.2.2.203 : GET /catalogue HTTP/1.1
	HTTP 10.2.2.203 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.2.203 : GET /catalogue HTTP/1.1
	HTTP 10.2.2.203 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.2.203 : GET /catalogue/03fef6ac-1896-4ce8-bd69-b798f85c6e0b HTTP/1.1
	HTTP 10.2.2.203 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.2.203 : GET /catalogue/d3588630-ad8e-49df-bbd7-3167f7efb246 HTTP/1.1
	HTTP 10.2.2.203 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.2.203 : GET /catalogue HTTP/1.1
	HTTP 10.2.2.203 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.2.203 : GET /catalogue HTTP/1.1

Traffic analysis - detected smells {NSC}
	Unencrypted traffic detected in pod front-end-6585d48b5c-qkmqp
	here is a sample of the packets (HTTP):
	HTTP 10.2.0.1 -> 10.2.2.204 : GET /catalogue HTTP/1.1
	HTTP 10.2.2.204 -> 10.128.117.95 : GET /catalogue HTTP/1.1
	HTTP 10.128.117.95 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.0.1 : 0
	HTTP 10.2.0.1 -> 10.2.2.204 : GET / HTTP/1.1
	HTTP 10.2.2.204 -> 10.2.0.1 : rue,
	HTTP 10.2.0.1 -> 10.2.2.204 : GET /login HTTP/1.1
	HTTP 10.2.2.204 -> 10.128.133.122 : GET /login HTTP/1.1
	HTTP 10.128.133.122 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.128.113.103 : GET /carts/57a98d98e4b00679b4a830b2/merge?sessionId=Ys4Dh0tNeTyvFLdVJkgb6tM0GhwvLQ6C HTTP/1.1
	HTTP 10.128.113.103 -> 10.2.2.204 : 0

Traffic analysis - detected smells {NSC}
	Unencrypted traffic detected in pod orders-5d8557969c-8d64b
	here is a sample of the packets (HTTP):
	HTTP 10.2.2.204 -> 10.2.1.189 : POST /orders HTTP/1.1
	HTTP 10.2.1.189 -> 10.128.133.122 : GET /addresses/57a98d98e4b00679b4a830b0 HTTP/1.1
	HTTP 10.2.1.189 -> 10.128.133.122 : GET /cards/57a98d98e4b00679b4a830b1 HTTP/1.1
	HTTP 10.128.133.122 -> 10.2.1.189 : HTTP/1.1 200 OK
	HTTP 10.128.133.122 -> 10.2.1.189 : HTTP/1.1 200 OK
	HTTP 10.2.1.189 -> 10.128.133.122 : GET /customers/57a98d98e4b00679b4a830b2 HTTP/1.1
	HTTP 10.2.1.189 -> 10.128.113.103 : GET /carts/57a98d98e4b00679b4a830b2/items HTTP/1.1
	HTTP 10.128.133.122 -> 10.2.1.189 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.1.189 : POST /orders HTTP/1.1
	HTTP 10.2.1.189 -> 10.128.113.103 : GET /carts/57a98d98e4b00679b4a830b2/items HTTP/1.1
	HTTP 10.2.1.189 -> 10.128.133.122 : GET /addresses/57a98d98e4b00679b4a830b0 HTTP/1.1

Traffic analysis - detected smells {NSC}
	Unencrypted traffic detected in pod user-65dcdb777-w2ffh
	here is a sample of the packets (HTTP):
	HTTP 10.2.2.204 -> 10.2.1.192 : GET /login HTTP/1.1
	HTTP 10.2.1.192 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.1.192 : GET /login HTTP/1.1
	HTTP 10.2.1.192 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.1.192 : GET /customers/57a98d98e4b00679b4a830b2 HTTP/1.1
	HTTP 10.2.1.192 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.2.204 -> 10.2.1.192 : GET /customers/57a98d98e4b00679b4a830b2/addresses HTTP/1.1
	HTTP 10.2.2.204 -> 10.2.1.192 : GET /customers/57a98d98e4b00679b4a830b2/cards HTTP/1.1
	HTTP 10.2.1.192 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.1.192 -> 10.2.2.204 : HTTP/1.1 200 OK
	HTTP 10.2.1.189 -> 10.2.1.192 : GET /addresses/57a98d98e4b00679b4a830b0 HTTP/1.1

